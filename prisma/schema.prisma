generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
    id          Int           @id @default(autoincrement())
    name        String        @db.VarChar()
    nickName    String        @db.VarChar()
    email       String        @unique @db.VarChar(32)
    password    String        @db.VarChar(255)
    role        UserCategory  @default(GUEST)
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    userProduct UserProduct[]
    Session     Session[]

    @@map("users")
}

enum UserCategory {
    ADMIN
    GUEST
}

model Session {
    id        Int      @id @default(autoincrement())
    userId    Int
    User      User     @relation(fields: [userId], references: [id])
    token     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("sessions")
}

model Product {
    id        Int      @id @default(autoincrement())
    name      String   @db.VarChar()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userProduct     UserProduct[]
    practiceProduct PracticeProduct[]

    @@map("products")
}

model UserProduct {
    id        Int      @id @default(autoincrement())
    userId    Int
    productId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user    User    @relation(fields: [userId], references: [id])
    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

    @@unique([userId, productId], name: "userId_productId")
    @@map("userProducts")
}

model Practice {
    id        Int      @id @default(autoincrement())
    name      String   @db.VarChar()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    practiceAdvantage PracticeAdvantage[]
    practiceProduct   PracticeProduct[]

    @@map("practices")
}

model PracticeAdvantage {
    id          Int      @id @default(autoincrement())
    advantage   String   @db.VarChar()
    description String   @db.VarChar()
    practiceId  Int      @unique
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    practice Practice @relation(fields: [practiceId], references: [id])

    @@map("practiceAdvantages")
}

model PracticeProduct {
    id         Int      @id @default(autoincrement())
    productId  Int
    practiceId Int
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    product  Product  @relation(fields: [productId], references: [id])
    practice Practice @relation(fields: [practiceId], references: [id])

    @@map("practiceProducts")
}
